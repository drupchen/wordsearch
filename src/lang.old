#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright (c) 2008, Samiuela Loni Vea Taufa
# All rights reserved.
#
# see LICENSE.TXT for license/copyright information
import string
import re

class Language:
    def __init__(self):
        self.nonLetters = string.digits + string.punctuation
    def wordbreaker(self, line):
        pass
    def isWord(self):
        pass
    
class to(Language):
    def __init__(self, list=""):
        Language.__init__(self)
        #trans_org   = u"ÁÂÃÄÉÊËÍÎÏÓÔÕÖÚÛÜáâãäéêëíîïóôõöúûüÁÂÃÄÉÊËÍÎÏÓÔÕÖÚÛÜáâãäéêëíîïóôõöúûüĀāĒēĨĩĪīŌōŨũŪūẼẽ"
        #trans_subst = u"ĀĀĀĀĒĒĒĪĪĪŌŌŌŌŪŪŪāāāāēēēīīīōōōōūūū"
        
        self.glottals = u"'`′ʹʺʻʼʽʾʿˊˋ̒̓̕ ‘’“”"
        self.validletters =unicode(string.letters)
        self.validletters += u"ÁÂÃÄÉÊËÍÎÏÓÔÕÖÚÛÜáâãäéêëíîïóôõöúûüÁÂÃÄÉÊËÍÎÏÓÔÕÖÚÛÜáâãäéêëíîïóôõöúûüĀāĒēĨĩĪīŌōŨũŪūẼẽ"
        self.list_words = []
        if list:
            self.wordbreaker(list)

    def wordbreaker(self, line):
        line = line.strip(self.nonWordChars)
        line = line.lstrip()
        self.list_words = line.translate(self.transtable, self.nonLetters).split()
        return self.list_words
    
    def linebreaker(self, line = None):
        if line is None or len(line) == 0:
            return False
        
        wordlist = []
        iWordStart = 0
        iPrev = 0
        iCurrent = 0
        iMax = len(line)
        
        for iCurrent in range(0, iMax):
            if line[iCurrent] in self.validletters:
                pass
            elif line[iCurrent] in self.glottals:
                    if iCurrent == iPrev and iCurrent == iWordStart:
                        iPrev = iCurrent + 1
                        iWordStart = iPrev
                        continue
                    elif iCurrent > iWordStart and iCurrent < iMax -1:
                        if line[iCurrent + 1] in self.validletters:
                            pass
                        else:
                            wordlist.append(line[wordstart:iCurrent])
            else:
                # some word boundary found
            iPrev = iCurrent

    
if __name__ == "__main__":
    test = to()
    print test.wordbreaker("Reject' :;Punctuation' and69 n0umbers")
    print test.wordbreaker("Convert special vowels ÁÂÃÄ to ÉÊË vowel ÍÎÏÓÔÕÖÚÛÜáâ macrons")
    print test.isWord("'Otua")
    print test.isWord("Filo'\"eiki")
    print test.isWord("Numbers09")