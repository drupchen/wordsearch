#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""

Unicode support is a strange beast in Python (not knowing how well it is supported in other 'programming' languages.

1. Python Configuration.

Python usually converts unicode to ASCII whenever it needs to make a regular string out of a unicode string? 

The default encoding scheme for Python source code is an option which you can customize in the file sitecustomize.py, or in later versions as an entry such as the 

# -*- coding: encoding -*- 

shown above or in the source code.

sitecustomize.py is normally found in the ${pythondir}/lib/site-packages and contains at least the lines
import sys
sys.setdefaultencoding('utf-8') 

2. Unicode and Text File encoding.

Text files are not normally (as far as I've used them) encoded in Unicode, and as such support for Non-Ascii characters is managed through the use of BeautifulSoup to try and ascertain the character encoding of files.

Further complication is that Microsoft Word smart quotes are not interpreted correctly using BeautifulSoup's estimate, and since that's my primary editor for generating 'accented' characters, I've hard-coded the code page / character encoding ('cp1252') that accurately reflects the smart quotes for decoding into unicode.
"""
